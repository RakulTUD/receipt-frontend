name: Frontend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for SonarQube

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_SCANNER_OPTS: "-Dsonar.verbose=true"

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Build and push Docker image
        run: |
          gcloud auth configure-docker gcr.io
          docker build -t gcr.io/${{ env.GCP_PROJECT }}/receipt-frontend:${{ github.sha }} .
          docker push gcr.io/${{ env.GCP_PROJECT }}/receipt-frontend:${{ github.sha }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy frontend \
            --image gcr.io/${{ env.GCP_PROJECT }}/receipt-frontend:${{ github.sha }} \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --tag stable \
            --set-env-vars BACKEND_URL=${{ secrets.BACKEND_URL }} \
            --timeout 600

env:
  GCP_PROJECT: receipt-460023